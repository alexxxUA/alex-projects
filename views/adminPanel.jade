extends layout
block facebookLogin
	include facebookLogin
block pageConfigValues
	include pageConfigValues
block adminPanel
	div.col-md-4.reset-padding
		div.panel.panel-info
			div.panel-heading
				h3.panel-title Server actions
			div.panel-body.server-actions-holder
				-if(cf.playlistEnabled){
					a.js-force-generate-playlists.btn.btn-success.btn-sm.col-xs-6.col-sm-6(href='/playlistForceGenerate', title='Force generate playlists') Force gen. playlists
					a.output-btn.btn.btn-info.btn-sm.col-xs-5.col-sm-5(href='#{cf.playlistOutputPath}', title='Playlist output') Playlist output
				-}
				a.btn.btn-success.btn-sm.col-xs-12.col-sm-12(href='#', title='Send email', data-dialog='email-dialog') Send email
		div.panel.panel-info.add-alias-pan
			div.panel-heading
				h3.panel-title New alias URL
			div.panel-body.visible
				form.js-ajax-form(action='/addAlias', ajax='true', ajax-success='adminPanel.addAlias', autocomplete='off')
					.form-group
						input.form-control.input-sm(type='text', name='alias_url', placeholder='Alias relative url. E.g.: /testUrl', data-validate-type='notEmpty')
					.form-group
						input.form-control.input-sm(type='text', name='alias_real_url', placeholder='Redirect url. E.g.: /real/url/here.mp3', data-validate-type='notEmpty')
					input.btn.btn-success.btn-sm(type='submit', value='ADD')
		div.panel.panel-info
			div.panel-heading
				h3.panel-title Open URL via proxy
			div.panel-body.visible
				form.js-ajax-form(action='/proxy', autocomplete='off')
					.input-group.form-group
						input.form-control.input-sm(type='text', name='url', placeholder='Type URL here', data-validate-type='notEmpty')
						.input-group-btn
							input.btn.btn-success.btn-sm(type='submit', value='Open')
		div.panel.panel-info.js-notification-panel
			div.panel-heading
				h3.panel-title Subscribe to notifications
			div.panel-body.visible
				form.b-push_notification.js-push-notification(action='/subscribe-to-notifications', method="POST", autocomplete='off')
					- each option in pushNotificationOptions
						.checkbox
							label
								input(type="checkbox" name=option.key checked=option.isActive)
								span=option.value
					input.btn.btn-success.btn-sm.col-xs-12.b-push_notification-subscribe(type='submit', value='Subscribe')
					input.btn.btn-success.btn-sm.col-xs-12.b-push_notification-update(type='submit', value='Update subscription')

	div.col-md-8.reset-padding.aliases-list-container
		div.panel.panel-info
			div.panel-heading
				h3.panel-title Alias URLs
			div.panel-body
				table.js-alias-table.js-data-holder.table.table-hover.table-bordered.table-condensed(data-edit-url="/updateAlias", data-remove-url="/removeAlias")
					thead
						tr
							th.alias-url-title Alias relative url
							th.alias-actual-url-title Redirect url
							th.alias-action-title.table-action-cell Actions
						tbody.js-alias-list
							-for(var i=0; i< aliases.length; i++)
								tr.js-data-line-item
									td
										input(type='hidden', name='alias_id', value='#{aliases[i]._id}')
										input.js-input-change(type='text' autocomplete='off' name='alias_url' value='#{aliases[i].alias}' data-before-edit='#{aliases[i].alias}')
									td
										input.js-input-change.alias-actual-url(type='text' autocomplete='off' name='alias_real_url' value='#{aliases[i].path}' data-before-edit='#{aliases[i].path}')
									td.alias-action-cont.table-action-cell
										a.btn.btn-xs.btn-info(href='#{aliases[i].alias}') Open
										input.js-data-edid.btn.btn-xs.btn-success(type='button', value='Save')
										input.js-data-remove.btn.btn-xs.btn-danger(type='button', value='Remove')
		div.panel.panel-info
			div.panel-heading
				h3.panel-title Users
			div.panel-body
				table.js-users-table.js-data-holder.table.table-hover.table-bordered.table-condensed.user-table(data-edit-url="/updateUser", data-remove-url="/removeUser")
					thead
						tr
							th.user-name-title Name
							th.user-email-url-title Email
							th.user-isadmin-title.center Is admin
							th.user-action-title.table-action-cell Actions
						tbody
							-for(var i=0; i< users.length; i++)
								-var isAdminOptionsMap = [{name: 'No', value: false}, {name: 'Yes', value: true}];
								tr.js-data-line-item
									td
										input(type='hidden', name='user_id', value='#{users[i]._id}')
										span=users[i].name
									td
										span=users[i].email
									td.center
										select.js-input-change.center(name="user_isadmin", data-before-edit='#{users[i].isAdmin}')
											-for(var j=0; j<isAdminOptionsMap.length; j++)
												-if(isAdminOptionsMap[j].value == users[i].isAdmin)
													option(value="#{isAdminOptionsMap[j].value}", selected)=isAdminOptionsMap[j].name
												-else
													option(value="#{isAdminOptionsMap[j].value}")=isAdminOptionsMap[j].name
									td.user-action-cont.table-action-cell
										input.js-data-edid.btn.btn-xs.btn-success(type='button', value='Edit')
										input.js-data-remove.btn.btn-xs.btn-danger(type='button', value='Remove')
	div#email-dialog
		form.send-email-form.js-ajax-form(method='POST', action='/sendMail', ajax='true', ajax-success='adminPanel.emailSended', data-no-reset='true', novalidate)
			h3 Send email
			input.form-control(type='text', name='to', placeholder='Recipient(s)', required)
			.input-group.js-input-group
				label.input-group-addon
					input.js-radio-req(type='radio', name='method', value='url', checked)
				input.form-control(name='mail-url', placeholder='Use content from url', required)
			.input-group.js-input-group
				label.input-group-addon
					input.js-radio-req(type='radio', name='method', value='inline')
				textarea.form-control(name='mail', placeholder='Email content')
			input.btn.btn-primary(type='submit', value='Send')
				