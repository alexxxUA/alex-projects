class ServiceWorker{constructor(){this.swUrl="/sw.js",this.init()}init(){if(navigator.serviceWorker&&!navigator.serviceWorker.controller)return navigator.serviceWorker.register(this.swUrl).then(function(){console.info("Service worker registered")})}}class ProxyParser{constructor(){this.proxyHref="/proxy?url=",this.proxyUrl=`${location.origin}${this.proxyHref}`,this.domParser=new DOMParser}doProxyFetch(e){return fetch(`${this.proxyUrl}${e}`).then(e=>e.text())}doPageFetch(e){return this.doProxyFetch(e).then(this.blockResources).then(this.convertHtmlToDom.bind(this))}blockResources(e){return e.replace(/src=/gm,"x-src=").replace(/href=/gm,"x-href=")}convertHtmlToDom(e){return this.domParser.parseFromString(e,"text/html")}}class BorderCams extends ProxyParser{constructor(){super(),this.camsUrl="https://dpsu.gov.ua/ua/border/",this.countriesSel='[data-id="country"] option',this.checkpointsSel='[data-id="puncts"] option',this.favoriteCountry="slovakia",this.init()}init(){void 0!==window.orientation&&document.body.classList.add("mobile"),this.renderApp()}async renderApp(){const e=this,r=await this.getData();r&&(Vue.component("border-cams",{data(){const t=r[e.favoriteCountry];let o=[];return t&&(o=t.checkpoints.filter(({name:e})=>!e.includes("вантаж")).sort(e.alphabetSort.bind(e,"name"))),{data:r,favoriteItems:o,streamSrc:o.length?o[0].src:null}},mounted(){console.log("mounted")},ready(){console.log("ready")},created(){console.log("created")}}),new Vue({el:"#app"}),console.log(r))}alphabetSort(e,r,t){return r[e]<t[e]?1:r[e]>t[e]?-1:0}getData(){return this.doPageFetch(this.camsUrl).then(this.parseData.bind(this))}parseData(e){const r=e.querySelectorAll(this.countriesSel),t=e.querySelectorAll(this.checkpointsSel);if(!r||!t)return this.error(`${this.countriesSel} or ${this.checkpointsSel} not found on source page!`),null;const o=Array.prototype.reduce.call(r,(e,r)=>(e[r.value]={name:r.text,checkpoints:[]},e),{});return t.forEach(e=>{o[e.value]&&o[e.value].checkpoints.push({name:e.text,src:this.updateStreamSrc(e.dataset.link)})}),o}updateStreamSrc(e){const r=new URL(e);return r.searchParams.get("autoplay")||r.searchParams.set("autoplay",!0),r.href}error(e){console.error(e)}}const sw=new ServiceWorker,borderCams=new BorderCams;