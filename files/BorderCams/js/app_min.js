class ProxyParser{constructor(){this.proxyHref="/proxy?url=",this.proxyUrl=`${location.origin}${this.proxyHref}`,this.domParser=new DOMParser}doProxyFetch(e){return fetch(`${this.proxyUrl}${e}`).then(e=>e.text())}doPageFetch(e){return this.doProxyFetch(e).then(this.blockResources).then(this.convertHtmlToDom.bind(this))}blockResources(e){return e.replace(/src=/gm,"x-src=").replace(/href=/gm,"x-href=")}convertHtmlToDom(e){return this.domParser.parseFromString(e,"text/html")}}class BorderCams extends ProxyParser{constructor(){super(),this.camsUrl="https://dpsu.gov.ua/ua/border/",this.countriesSel='[data-id="country"] option',this.checkpointsSel='[data-id="puncts"] option',this.favoriteCountry="slovakia",this.init()}init(){this.renderApp()}async renderApp(){const e=this,t=await this.getData();t&&(Vue.component("border-cams",{data(){const r=t[e.favoriteCountry];return{data:t,favoriteItems:r?r.checkpoints:[],streamSrc:r?r.checkpoints[0].src:null}},mounted(){console.log("mounted")},ready(){console.log("ready")},created(){console.log("created")}}),new Vue({el:"#app"}),console.log(t))}getData(){return this.doPageFetch(this.camsUrl).then(this.parseData.bind(this))}parseData(e){const t=e.querySelectorAll(this.countriesSel),r=e.querySelectorAll(this.checkpointsSel);if(!t||!r)return this.error(`${this.countriesSel} or ${this.checkpointsSel} not found on source page!`),null;const o=Array.prototype.reduce.call(t,(e,t)=>(e[t.value]={name:t.text,checkpoints:[]},e),{});return r.forEach(e=>{o[e.value]&&o[e.value].checkpoints.push({name:e.text,src:e.dataset.link})}),o}error(e){console.error(e)}}const borderCams=new BorderCams;